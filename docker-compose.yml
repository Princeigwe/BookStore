version: '3'

services: 
    web:
        build: .
        #command: python manage.py runserver 0.0.0.0:8000
        #command: gunicorn bookstore_project.wsgi -b 0.0.0.0:8000 --timeout 1000 --workers=3 --threads=3 --worker-connections=1000   # using gunicorn gateway
        command: gunicorn bookstore_project.wsgi --preload -b 0.0.0.0:8000 
        environment: 
            - ENVIRONMENT=development
            - NEW_SECRET_KEY=${SECRET_KEY}
            - DEBUG=1
            - FLUTTERWAVE_PUBLIC_TEST_KEY=${FLUTTERWAVE_PUBLIC_TEST_KEY}
            - FLUTTERWAVE_SECRET_TEST_KEY=${FLUTTERWAVE_SECRET_TEST_KEY}
            - FLUTTERWAVE_LIVE_PUBLIC_KEY=${FLUTTERWAVE_LIVE_PUBLIC_KEY}
            - FLUTTERWAVE_LIVE_SECRET_KEY=${FLUTTERWAVE_LIVE_SECRET_KEY}
            - DROPBOX_CONSUMER_KEY=${DROPBOX_CONSUMER_KEY}
            - DROPBOX_CONSUMER_SECRET=${DROPBOX_CONSUMER_SECRET}
            - DROPBOX_ACCESS_TOKEN_SECRET=${DROPBOX_ACCESS_TOKEN_SECRET}

        volumes: 
            - .:/code
        ports: 
            - 8000:8000
        depends_on: 
            - db
            - es
    
    db:
        image: postgres
        volumes: 
            - ./data/db:/var/lib/postgresql/data
        environment: 
            - POSTGRES_DB=${DATABASE_NAME}
            - POSTGRES_USER=${DATABASE_USER}
            - POSTGRES_PASSWORD=${DATABASE_PASSWORD}
        
        
    
    es:
        image: elasticsearch:7.8.1
        environment: 
            - discovery.type=single-node
        ports: 
            - "9200:9200"